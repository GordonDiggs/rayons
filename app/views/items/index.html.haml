.container-fluid#items
  #add-new.text-center
    - if @can_edit
      %form.form-inline.ajax{ :action => '/items', :method => 'post' }
        .form-group
          = token_tag(nil)
          - field_headers.each do |field|
            %input.form-control{ :type => 'text', :name => "item[#{field.parameterize(separator: "_")}]", :placeholder => field }
          %button.btn.btn-primary{ :type => 'submit' } Add

  .table-responsive
    %table.table{ 'data-sort' => params[:sort], 'data-direction' => params[:direction] }
      %thead
        %tr
          - field_headers.each do |field|
            %th{ :class => "item-#{field.parameterize(separator: "_")}" }
              - sort = field.parameterize(separator: "_")
              %a{ :href => '', 'data-sort' => sort }
                - if field == "Price Paid"
                  Paid
                - else
                  = field
          %th
            %a.added_on{ :href => '', 'data-sort' => 'created_at'}
              Added
          %th
      %tbody.js-items
  .js-pagination
  .loader.js-loader
    - 12.times do
      %li

%script#item_template{ type: 'text/template' }= render :partial => '/items/template'

:javascript
  window.filter_options = #{params.slice(:sort, :direction, :search, :q, :page).to_json};

- content_for :nav do
  %ul.nav.navbar-nav
    %li
      %a.js-items-page-info
    %li
      %a{ :href => '/stats' } stats
    %li
      %a.export{ :href => '/items.csv' } export
    %li
      %a{ :href => random_items_path } random
    - if @can_edit
      %li
        %a.logout{ :href => '/logout' } log out
      %li
        %a.import{ :href => '' } import csv
        %form.navbar-form.login.collapse{ :action => '/items/import', :method => 'post', :enctype => 'multipart/form-data'}
          .form-group
            = token_tag(nil)
            %input.form-control{ :type => 'file', :name => 'file' }
            %input.form-control{ :type => 'submit', :value => 'Import' }
    - else
      %li
        %a.login{ :href => '' } log in
      %li
        = form_tag user_session_path, class: "navbar-form collapse" do
          .form-group
            = text_field_tag 'user[email]', nil, :placeholder => 'Email Address', class: "form-control"
            = password_field_tag 'user[password]', nil, :placeholder => 'Password', class: "form-control"
          %button.btn.btn-default{ type: "submit" } Sign in
    %li
      %form.search.navbar-form.js-search{ :action => '/', :method => 'get' }
        .form-group
          %input.search-input.form-control{ :type => 'search', :name => 'search', :placeholder => 'Search', :value => params[:search] }
    %li
      %a{ href: search_items_path } advanced
