.content
  - if can? :manage, Item
    #add-new
      %form.ajax{ :action => '/items', :method => 'post' }
        = token_tag(nil)
        - @field_headers.each do |field|
          %input{ :type => 'text', :name => "item[#{field.parameterize('_')}]", :placeholder => field }
        %input{ :type => 'submit', :value => 'Add' }

  %table{ 'data-sort' => params[:sort], 'data-direction' => params[:direction] }
    %tr
      - @field_headers.each do |field|
        %th
          - sort = field.parameterize('_')
          %a{ :href => '', 'data-sort' => sort, :class => ('current' if params[:sort] == sort) }
            = field
            - if params[:sort] == sort
              = params[:direction] == 'ASC' ? "\u2191" : "\u2193"
      %th
        %a{ 'data-sort' => 'created_at', :class => ('current' if params[:sort] == 'created_at') }
          Added On
          - if params[:sort] == 'created_at' 
            = params[:direction] == 'ASC' ? "\u2191" : "\u2193"

    = render :partial => 'items/item', :collection => @items, :as => :item

#editing-bar
  %span #{@items.count} items.
  %a{ :href => '/stats' } stats
  %a.export{ :href => '/items.csv' } export all items to csv
  %a.random{ :href => 'javascript:' } random
  - if can? :manage, Item 
    %a.logout{ :href => '/logout' } disable editing
    %a.import{ :href => '' } import csv
    %form{ :action => '/items/import', :method => 'post', :enctype => 'multipart/form-data'}
      = token_tag(nil)
      %input{ :type => 'file', :name => 'file' }
      %input{ :type => 'submit', :value => 'Import' }
  - else
    editing is disabled.
    %a.login{ :href => '' } enable now?
    = form_tag user_session_path do
      = text_field_tag 'user[email]', nil, :placeholder => 'Email Address'
      = password_field_tag 'user[password]', nil, :placeholder => 'Password'
      %button Sign in
  %form.search{ :action => '/', :method => 'get' }
    %input{ :type => 'text', :name => 'search', :placeholder => 'Search', :value => params[:search] }
.toggle-controls
  %a{ :href => '' } hide controls

